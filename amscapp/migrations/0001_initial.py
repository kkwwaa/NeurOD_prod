# Generated by Django 4.2.2 on 2023-09-07 19:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Блок')),
            ],
            options={
                'verbose_name': 'Блок',
                'verbose_name_plural': 'Блоки',
            },
        ),
        migrations.CreateModel(
            name='Modality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='amscapp.block')),
            ],
            options={
                'verbose_name': 'Модальность',
                'verbose_name_plural': 'Модальности',
            },
        ),
        migrations.CreateModel(
            name='NumericQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=100, verbose_name='Текст вопроса')),
                ('num', models.IntegerField(blank=True, null=True, verbose_name='Номер вопроса')),
                ('avg_value', models.FloatField(blank=True, null=True, verbose_name='Среднее значение')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Минимальное значение')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Максимальное значение')),
                ('rev', models.BooleanField(default=False)),
                ('modality', models.ManyToManyField(to='amscapp.modality')),
            ],
            options={
                'verbose_name': 'Числовый вопрос',
                'verbose_name_plural': 'Числовые вопросы',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Вариант ответа')),
                ('score', models.FloatField(default=0, verbose_name='Колличество баллов')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответа',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('group', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Класс(группа)')),
                ('gender', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], default='Мужской', max_length=7, verbose_name='Пол пациента')),
                ('parent_name', models.CharField(blank=True, max_length=100, verbose_name='ФИО родителя/опекуна')),
                ('parent_phone_number', models.CharField(blank=True, max_length=100, verbose_name='Номер контактного телефона родителя/опекуна')),
                ('parent_email', models.EmailField(blank=True, max_length=100, verbose_name='Электронная почта родителя/опекуна')),
                ('plaint', models.TextField(blank=True, verbose_name='Жалобы')),
                ('goal', models.TextField(blank=True, verbose_name='Цель обращения')),
                ('diagnosis', models.TextField(blank=True, verbose_name='Диагноз')),
                ('anamnes', models.TextField(blank=True, verbose_name='Анамнез')),
                ('exam_data', models.TextField(blank=True, verbose_name='Данные наблюдения')),
                ('hand', models.CharField(choices=[('Л', 'Левая'), ('П', 'Правая')], default='П', max_length=1, verbose_name='Ведущая рука')),
                ('date_registration', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'db_table': 'amscapp_patient',
            },
        ),
        migrations.CreateModel(
            name='Probs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='amscapp.block')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.modality')),
            ],
            options={
                'verbose_name': 'Проба',
                'verbose_name_plural': 'Пробы',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(blank=True, null=True, verbose_name='Номер вопроса')),
                ('question_text', models.CharField(max_length=100, verbose_name='Текст вопроса')),
                ('avg_value', models.FloatField(blank=True, null=True, verbose_name='Среднее значение')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Минимальное значение')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Максимальное значение')),
                ('modality', models.ManyToManyField(to='amscapp.modality')),
                ('proba', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.probs')),
            ],
            options={
                'verbose_name': 'Качественный вопрос',
                'verbose_name_plural': 'Качественные вопросы',
            },
        ),
        migrations.CreateModel(
            name='ProbsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='static/image/probs_img/')),
                ('prob', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.probs')),
            ],
            options={
                'verbose_name': 'Инструкция к пробе',
                'verbose_name_plural': 'Инструкции к пробам',
            },
        ),
        migrations.CreateModel(
            name='PatientNumericAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ответ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('num', models.IntegerField(default=0, verbose_name='Повтор')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.modality')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.patient')),
                ('proba', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.probs')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.numericquestion')),
            ],
            options={
                'verbose_name': 'Ответ на числовый вопрос',
                'verbose_name_plural': 'Ответы на числовые вопросы',
                'db_table': 'amscapp_patientnumericanswer',
            },
        ),
        migrations.CreateModel(
            name='PatientAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('num', models.IntegerField(default=0, verbose_name='Повтор')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.modality')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.option')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.patient')),
                ('proba', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.probs')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.question')),
            ],
            options={
                'verbose_name': 'Ответ анкеты',
                'verbose_name_plural': 'Ответы анкеты',
                'db_table': 'amscapp_patientanswer',
            },
        ),
        migrations.AddField(
            model_name='option',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='amscapp.question'),
        ),
        migrations.AddField(
            model_name='numericquestion',
            name='proba',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amscapp.probs'),
        ),
        migrations.CreateModel(
            name='NumericOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Вариант ответа')),
                ('coefficient', models.FloatField(default=1, verbose_name='Коэффициент')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='amscapp.numericquestion')),
            ],
            options={
                'verbose_name': 'Числовая опция',
                'verbose_name_plural': 'Числовые опции',
            },
        ),
    ]
